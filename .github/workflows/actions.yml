name: Splunk Packaging

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: pip install splunk-packaging-toolkit-1.0.1.tar.gz

    - name: Validate VulnInfo Sync
      run: slim validate vuln_info_sync

  build:
    runs-on: ubuntu-20.04
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: pip install splunk-packaging-toolkit-1.0.1.tar.gz

    - name: Extract version from app.conf
      id: extract-version
      run: |
        VERSION=$(grep -Po '(?<=^version = ).*' vuln_info_sync/default/app.conf)
        echo "VERSION=${VERSION}" >> $GITHUB_ENV

    - name: Package VulnInfo Sync
      run: |
        slim package vuln_info_sync
        # Verify the package name and ensure it matches the pattern
        PACKAGE_FILE=$(ls vuln_info_sync-${{ env.VERSION }}.tar.gz)
        echo "Packaged file: $PACKAGE_FILE"

    - name: Create release
      id: create-release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ env.VERSION }}
        release_name: "Release v${{ env.VERSION }}"
        body: "Release of version ${{ env.VERSION }}."
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: vuln_info_sync-${{ env.VERSION }}.tar.gz
        asset_name: vuln_info_sync-${{ env.VERSION }}.tar.gz
        asset_content_type: application/gzip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
